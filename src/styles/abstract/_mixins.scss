// LIST OF MIXINS:
//        screen
//        hocus
//        flex
//        square
//        padding
//        absoluteCenter

// BREAKPOINTS

$breakpoint-small: 600px;
$breakpoint-med-small: 960px;
$breakpoint-med: 1175px;

$breakpoints: (
  mobile: 0,
  tablet: 768px,
  desktop: 1024px
);

@mixin media($query) {
  @if $query == '>=desktop' {
    @media (min-width: map-get($breakpoints, desktop)) {
      @content;
    }
  }
  @else if $query == '>=tablet' {
    @media (min-width: map-get($breakpoints, tablet)) {
      @content;
    }
  }
  // Ajoute d'autres cas si besoin
}

@mixin screen($size, $type: max, $pixels: $breakpoint-small) {
  @if $size == "small" {
    @media screen and ($type + -width: $breakpoint-small) {
      @content;
    }
  } @else if $size == "med-small" {
    @media screen and ($type + -width: $breakpoint-med-small) {
      @content;
    }
  } @else if $size == "med" {
    @media screen and ($type + -width: $breakpoint-med) {
      @content;
    }
  } @else if $size == "large" {
    @media screen and ($type + -width: $breakpoint-med) {
      @content;
    }
  } @else if $size == "custom" {
    @media screen and ($type + -width: $pixels + px) {
      @content;
    }
  } @else {
    @content;
  }
}

/*Media query mixin*/
@mixin hocus() {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin flex($justify: center, $align: center, $direction: row) {
  display: -webkit-box; // old
  display: -moz-box; // old
  display: -ms-flexbox; // ie
  display: -webkit-flex; // new
  display: flex; // new

  @if $justify == center {
    justify-content: center;
  }

  @if $justify == space-between {
    justify-content: space-between;
  }

  @if $align == center {
    align-items: center;
  }
  @if $direction == column {
    flex-direction: column;
  }
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin beforeMixin($wdith, $height) {
  position: absolute;
  width: $wdith;
  height: $height;
  content: '';
}
//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  @if $top != 0 {
    padding-top: $top;
  }
  @if $right != 0 {
    padding-right: $right;
  }
  @if $bottom != 0 {
    padding-bottom: $bottom;
  }
  @if $left != 0 {
    padding-left: $left;
  }
}


@mixin absoluteCenter() {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}